#!/usr/bin/env ruby

require 'optparse'

require_relative '../lib/check_please'

argv = ARGV.dup

ref_file = argv.shift
can_file = argv.shift
diff_opts = {}

@parser = OptionParser.new do |opts|
  opts.banner = <<~EOF
Usage: #{__FILE__} <reference> <candidate> <options>

  Tool for parsing and diffing two JSON files.

  Arguments:
    <reference> is the name of a file to use as the reference.
    <candidate> is the name of a file to compare against the reference.

    NOTE:  If the <candidate> arg is omitted, stdin will be used instead.
    This allows you to copy candidate JSON to the clipboard and (on a Mac) do:

      $ pbpaste | #{__FILE__} <reference>

  <options>:
	EOF

  formats = CheckPlease::Printers::FORMATS.join(", ")

  opts.on("-f FORMAT", "--format FORMAT", "specify the format (available options: [#{formats}]") do |val|
    diff_opts[:format] = val
  end
end



def print_help_and_exit
  @parser.parse(%w[--help])
  exit # technically redundant but helps me feel better
end

def read_file(filename)
  return nil if filename.to_s =~ /^\s*$/
  File.read(filename)
rescue Errno::ENOENT
  # no such file, buddy
  return nil
end



# First off, try to read in the files the user told us about...
reference = read_file(ref_file)
candidate = read_file(can_file) || $stdin.read

print_help_and_exit if reference.to_s =~ /^\s*$/
print_help_and_exit if candidate.to_s =~ /^\s*$/

begin
  @parser.parse(argv)
rescue OptionParser::InvalidOption, OptionParser::AmbiguousOption => e
  puts "\n>>> #{e.message}\n\n"
  print_help_and_exit
end

report = CheckPlease.render_diff(reference, candidate, **diff_opts)
puts report
